<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Commands on フロー Furo</title>
    <link>http://furo.pro/docs/commands/</link>
    <description>Recent content in Commands on フロー Furo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://furo.pro/docs/commands/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>init</title>
      <link>http://furo.pro/docs/commands/furo_init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_init/</guid>
      <description>furo init #  Initialize a project structure to begin with.
Synopsis #  The configuration is set up to use µSpecs as source of truth.</description>
    </item>
    
    <item>
      <title>help</title>
      <link>http://furo.pro/docs/commands/furo_help-command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_help-command/</guid>
      <description>furo help #  Help about any command
Synopsis #  Help provides help for any command in the application. Simply type furo help [path to command] for full details.
furo help [command] [flags] Options #   -h, --help help for help Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>run</title>
      <link>http://furo.pro/docs/commands/furo_run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_run/</guid>
      <description>furo run #  Runs a configured flow.
Synopsis #  Runs a configured flow of furo commands.
A flow is a list of custom commands or furo run commands which are executed.
To configure a custom command, add them to the commands section of the .furo config file.
Example Config:
1 2 3 4 5 6 7 8 9 10  commands:publish_npm:&amp;#34;./scripts/test.sh&amp;#34;flows:default:- muSpec2Spec- publish_npmpublish:- publish_npm  Tipp: If you need the types and services in your command, just call furo again.</description>
    </item>
    
    <item>
      <title>muSpec2Spec</title>
      <link>http://furo.pro/docs/commands/furo_muSpec2Spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_muSpec2Spec/</guid>
      <description>furo muSpec2Spec #  Updates the type specs with the definitions from the type µSpecs.
Synopsis #  The converter will update your type specs and also delete specs and fields if they are not in the µSpec file anymore.
Do not forget to set your µSpec folder in the .furo config.
furo muSpec2Spec [flags] Options #   -d, --delete Delete specs which are not in muTypes -h, --help help for muSpec2Spec --overwrite-spec-options Overwrite the proto options section in the spec files Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>checkImports</title>
      <link>http://furo.pro/docs/commands/furo_checkImports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_checkImports/</guid>
      <description>furo checkImports #  Checks and correct the imports
Synopsis #  Use this command after moving of types. It will check and correct all imports and update the specs
furo checkImports [flags] Options #   -h, --help help for checkImports Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>exportAsYaml</title>
      <link>http://furo.pro/docs/commands/furo_exportAsYaml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_exportAsYaml/</guid>
      <description>furo exportAsYaml #  Exports all specs and the current config in one yaml file to stdout
Synopsis #  Use this for your chain of generators&amp;hellip;
You will get a yaml with all types and services and the config. Feel free to add custom sections in the config to use them in custom commands or scripts.
services: your.Service: ... types: your.type: ... config: module: mod custom: remoteDir: &amp;quot;path/to/somewhere&amp;quot; otherCustomSetting: true  furo exportAsYaml [flags] Options #   -f, --full Include the ast info -h, --help help for exportAsYaml Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>genMessageProtos</title>
      <link>http://furo.pro/docs/commands/furo_genMessageProtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_genMessageProtos/</guid>
      <description>furo genMessageProtos #  Generate the message protos from the type specs.
Synopsis #  The generated proto messages will be generated to the configured path.
.furo config example
build: proto: targetDir: &amp;quot;./dist/protos&amp;quot; #Hint: add this to your proto include path  furo genMessageProtos [flags] Options #   -h, --help help for genMessageProtos Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>genServiceProtos</title>
      <link>http://furo.pro/docs/commands/furo_genServiceProtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_genServiceProtos/</guid>
      <description>furo genServiceProtos #  Generate service protos from the specs
Synopsis #  The generated proto services will be generated to the configured path.
.furo config example
build: proto: targetDir: &amp;quot;./dist/proto&amp;quot; #Hint: add this to your proto include path	 furo genServiceProtos [flags] Options #   -h, --help help for genServiceProtos Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>genEsModule</title>
      <link>http://furo.pro/docs/commands/furo_genEsModule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_genEsModule/</guid>
      <description>furo genEsModule #  generate es6 spec module
Synopsis #  The furo data objects relys on the server specs.
furo genEsModule [flags] Options #   -h, --help help for genEsModule Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>muSrvSanitize</title>
      <link>http://furo.pro/docs/commands/furo_muSrvSanitize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_muSrvSanitize/</guid>
      <description>furo muSrvSanitize #  Sanitize muServices
Synopsis #  Sanitizing includes:
 Adding of query params which are part of the url.  furo muSrvSanitize [flags] Options #   -h, --help help for muSrvSanitize Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>spec2muSpec</title>
      <link>http://furo.pro/docs/commands/furo_spec2muSpec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_spec2muSpec/</guid>
      <description>furo spec2muSpec #  A brief description of your command
Synopsis #  A longer description that spans multiple lines and likely contains examples and usage of using your command. For example:
Cobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application.
furo spec2muSpec [flags] Options #   -d, --delete Delete muSpecs which not exist in Spec -h, --help help for spec2muSpec Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>install</title>
      <link>http://furo.pro/docs/commands/furo_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_install/</guid>
      <description>furo install #  Installs the dependencies
Synopsis #  Installs the configured dependencies from the .furo config.
Enter the name of the repository and a tag or branch to install. If you want latest (not recommended) add main (master).
dependencies: - &amp;quot;git@github.com:theNorstroem/furoBaseSpecs.git v1.10.9&amp;quot;  It is up to you to add the dependencies to your version control system. We strongly recommend this if you work with packages that are not owned by your organisation.</description>
    </item>
    
  </channel>
</rss>
