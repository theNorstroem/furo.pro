<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on フロー Furo</title>
    <link>http://furo.pro/</link>
    <description>Recent content in Introduction on フロー Furo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://furo.pro/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>B E C</title>
      <link>http://furo.pro/docs/tools/BEC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/tools/BEC/</guid>
      <description>フロー furoBEC #  The furo build essentials container. #  This container contains all tools you need to work with a furo spec project.
 furoBEC on github
Usage #  Bash mode #  docker run -it --rm -v `pwd`:/specs thenorstroem/furo-bec # do your stuff # type exit to quit exit  Command mode #  This will run furo with the configured flow build.
docker run -it --rm -v `pwd`:/specs thenorstroem/furo-bec build   TIPP: If your furo commands have to access different directories, do not forget to mount them.</description>
    </item>
    
    <item>
      <title>help</title>
      <link>http://furo.pro/docs/commands/furo_help-command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_help-command/</guid>
      <description>furo help #  Help about any command
Synopsis #  Help provides help for any command in the application. Simply type furo help [path to command] for full details.
furo help [command] [flags] Options #   -h, --help help for help Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>http://furo.pro/docs/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/installation/</guid>
      <description>Installation #  You can install furo on your local machine. For working with specs only, this is enough. We recommend furoBEC if you have to generate more then &amp;ldquo;just&amp;rdquo; the specs. furoBEC is a docker image which has nearly all dependencies already installed to generate all the additional things you may need to.
Installation with brew #  brew tap theNorstroem/tap brew install furo  Installation with go #  GO111MODULE=on go get github.</description>
    </item>
    
    <item>
      <title>run</title>
      <link>http://furo.pro/docs/commands/furo_run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_run/</guid>
      <description>furo run #  Runs a configured flow.
Synopsis #  Runs a configured flow of furo commands.
To configure a flow of commands just add a &amp;ldquo;flow&amp;rdquo; in the flows section of your .furo config. A flow is just a list of commands which gets executed in order
Example Config:
[.furo] commands: publish_npm: &amp;quot;./scripts/test.sh&amp;quot; flows: type: - cleanTypeProtoDir - muSpec2Spec - TypeSpec2Proto - publish_npm  Command:
This config will run &amp;ldquo;cleanTypeProtoDir&amp;rdquo;, muSpec2Spec&amp;quot;&amp;quot; and &amp;ldquo;TypeSpec2Proto&amp;rdquo; in sequence and calling the command publish_npm</description>
    </item>
    
    <item>
      <title>furo web</title>
      <link>http://furo.pro/docs/web-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/web-components/</guid>
      <description>フロー Furo Web Components #  Furo Web Components provides an enterprise ready set of web components which play seamlessly with Furo. Based on web standards and future proved. Compliant with any technology of choice. With minimal footprint it includes all enterprise standards, i18n, theming and much more.
The furo web components are a wide set of components which covers everything you need to write a web application. They consume the same types which are defined with furo.</description>
    </item>
    
    <item>
      <title>muSpec2Spec</title>
      <link>http://furo.pro/docs/commands/furo_muSpec2Spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_muSpec2Spec/</guid>
      <description>furo muSpec2Spec #  Updates the type specs with the definitions from the type µSpecs.
Synopsis #  The converter will update your type specs and also delete specs and fields if they are not in the µSpec file anymore.
Do not forget to set your µSpec folder in the .furo config.
furo muSpec2Spec [flags] Options #   -d, --delete Delete specs which are not in muTypes -h, --help help for muSpec2Spec --overwrite-spec-options Overwrite the proto options section in the spec files Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>http://furo.pro/docs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/overview/</guid>
      <description>Overview #  Furo can produce and consume proto files. This enables you to use all the existing protoc generators to generate the output that fits your needs. Outputs can be documentations, boilerplate code and even applications.
 mermaid.initialize({ &#34;flowchart&#34;: { &#34;useMaxWidth&#34;:true }, &#34;theme&#34;: &#34;default&#34; } ) graph TD µSpec(µSpec) Spec([Spec]) µSpec-- furo --Spec Spec-. furo .-µSpec Spec-- furoc-gen-XXX --x[...] Spec-- furo --Es6Module Spec-- furo --Proto Proto-- protoc-gen-grpc-gateway --Gateway Proto-- protoc-gen-openapiv2 --OpenApi OpenApi-- swagger --xo[.</description>
    </item>
    
    <item>
      <title>Project Configuration</title>
      <link>http://furo.pro/docs/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/configuration/</guid>
      <description>Configuration #  Each spec project must have a .furo configuration file.
A fictive example of a furo config for a spec project.
furo:&amp;#34;1.20.0&amp;#34;#Minimal furo versionspecDir:&amp;#34;./specs&amp;#34;specFormat:&amp;#34;yaml&amp;#34;#set to yaml or jsondependencies:#do not write every type/message again and again. Install them.- &amp;#34;git@github.com:theNorstroem/furoBaseSpecs.git v1.11.8&amp;#34;# The importer looks for all **/*.type.spec files recursive The importer looks for all **/*.service.spec files recursivedependenciesDir:dependencies#directory where the dependencies get installed to.muSpec:types:- &amp;#34;./muspecs/**/*types.yaml&amp;#34;- &amp;#34;./muspecs/*types.yaml&amp;#34;#Use this if you do not put your specs in foldersservices:- &amp;#34;.</description>
    </item>
    
    <item>
      <title>checkImports</title>
      <link>http://furo.pro/docs/commands/furo_checkImports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_checkImports/</guid>
      <description>furo checkImports #  Checks and correct the imports
Synopsis #  Use this command after moving of types. It will check and correct all imports and update the specs
furo checkImports [flags] Options #   -h, --help help for checkImports Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>exportAsYaml</title>
      <link>http://furo.pro/docs/commands/furo_exportAsYaml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_exportAsYaml/</guid>
      <description>furo exportAsYaml #  Exports all specs and the current config in one yaml file to stdout
Synopsis #  Use this for your chain of generators&amp;hellip;
You will get a yaml with all types and services and the config. Feel free to add custom sections in the config to use them in custom commands or scripts.
services: your.Service: ... types: your.type: ... config: module: mod custom: remoteDir: &amp;quot;path/to/somewhere&amp;quot; otherCustomSetting: true  furo exportAsYaml [flags] Options #   -f, --full Include the ast info -h, --help help for exportAsYaml Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>genMessageProtos</title>
      <link>http://furo.pro/docs/commands/furo_genMessageProtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_genMessageProtos/</guid>
      <description>furo genMessageProtos #  Generate the message protos from the type specs.
Synopsis #  The generated proto messages will be generated to the configured path.
.furo config example
build: proto: targetDir: &amp;quot;./dist/protos&amp;quot; #Hint: add this to your proto include path  furo genMessageProtos [flags] Options #   -h, --help help for genMessageProtos Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>genServiceProtos</title>
      <link>http://furo.pro/docs/commands/furo_genServiceProtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_genServiceProtos/</guid>
      <description>furo genServiceProtos #  Generate service protos from the specs
Synopsis #  The generated proto services will be generated to the configured path.
.furo config example
build: proto: targetDir: &amp;quot;./dist/proto&amp;quot; #Hint: add this to your proto include path	 furo genServiceProtos [flags] Options #   -h, --help help for genServiceProtos Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>genEsModule</title>
      <link>http://furo.pro/docs/commands/furo_genEsModule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_genEsModule/</guid>
      <description>furo genEsModule #  generate es6 spec module
Synopsis #  The furo data objects relys on the server specs.
furo genEsModule [flags] Options #   -h, --help help for genEsModule Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>muSrvSanitize</title>
      <link>http://furo.pro/docs/commands/furo_muSrvSanitize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_muSrvSanitize/</guid>
      <description>furo muSrvSanitize #  Sanitize muServices
Synopsis #  Sanitizing includes:
 Adding of query params which are part of the url.  furo muSrvSanitize [flags] Options #   -h, --help help for muSrvSanitize Options inherited from parent commands #   --config string config file (default is CWD/.furo.yaml) Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>spec2muSpec</title>
      <link>http://furo.pro/docs/commands/furo_spec2muSpec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_spec2muSpec/</guid>
      <description>furo spec2muSpec #  A brief description of your command
Synopsis #  A longer description that spans multiple lines and likely contains examples and usage of using your command. For example:
Cobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application.
furo spec2muSpec [flags] Options #   -d, --delete Delete muSpecs which not exist in Spec -h, --help help for spec2muSpec Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>install</title>
      <link>http://furo.pro/docs/commands/furo_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://furo.pro/docs/commands/furo_install/</guid>
      <description>furo install #  Installs the dependencies
Synopsis #  Installs the configured dependencies from the .furo config.
Enter the name of the repository and a tag or branch to install. If you want latest (not recommended) add main (master).
dependencies: - &amp;quot;git@github.com:theNorstroem/furoBaseSpecs.git v1.10.9&amp;quot;  It is up to you to add the dependencies to your version control system. We strongly recommend this if you work with packages that are not owned by your organisation.</description>
    </item>
    
    <item>
      <title>Release1.24.1</title>
      <link>http://furo.pro/posts/release1.24.1/</link>
      <pubDate>Thu, 18 Mar 2021 16:22:22 +0100</pubDate>
      
      <guid>http://furo.pro/posts/release1.24.1/</guid>
      <description>Release 1.24.1 #  features: #  Placeholder attribute in field metas added
furoBEC #  docker pull thenorstroem/furo-bec:v1.24.1 docker pull thenorstroem/furo-bec:latest</description>
    </item>
    
    <item>
      <title>Release1.23.0</title>
      <link>http://furo.pro/posts/release1.23.0/</link>
      <pubDate>Thu, 21 Jan 2021 22:22:22 +0100</pubDate>
      
      <guid>http://furo.pro/posts/release1.23.0/</guid>
      <description>Release 1.23.0 #  features: #  Using multiline description in type micro spec type def.
furoBEC #  NOT released yet docker pull thenorstroem/furo-bec:v1.23.0 docker pull thenorstroem/furo-bec:latest
homebrew #  NOT released yet Formula updated (488ab9b9eb573008e56108a1786e8592f97fe7710f6eaa137ce3bdf0279aae22)</description>
    </item>
    
    <item>
      <title>Release1.22.3</title>
      <link>http://furo.pro/posts/release1.22.3/</link>
      <pubDate>Fri, 11 Dec 2020 00:14:22 +0100</pubDate>
      
      <guid>http://furo.pro/posts/release1.22.3/</guid>
      <description>Release 1.22.3 #  fixes: #  genEsModule oneof from specs included
furoBEC #  docker pull thenorstroem/furo-bec:v1.22.3 docker pull thenorstroem/furo-bec:latest
homebrew #  Formula updated (488ab9b9eb573008e56108a1786e8592f97fe7710f6eaa137ce3bdf0279aae22)</description>
    </item>
    
    <item>
      <title>Release1.22.2</title>
      <link>http://furo.pro/posts/release1.22.2/</link>
      <pubDate>Tue, 01 Dec 2020 06:02:22 +0100</pubDate>
      
      <guid>http://furo.pro/posts/release1.22.2/</guid>
      <description>Release 1.22.2 #   commit: eaee2ad6  features: #  muType: multiline type field definitions supported, this makes it easier to write good descriptions.
muService: multiline method definitions supported, this makes it easier to write good descriptions.
muService: multiline query param field definitions supported, this makes it easier to write good descriptions.
muSpec2Spec: flag –overwrite-spec-options to generate the default options based on the .furo config again.
fixes: #  muSpec2Spec &amp;ndash;overwrite-spec-options null pointer in flow mode.</description>
    </item>
    
    <item>
      <title>Release1.20.1</title>
      <link>http://furo.pro/posts/release1.20.1/</link>
      <pubDate>Mon, 16 Nov 2020 20:02:22 +0100</pubDate>
      
      <guid>http://furo.pro/posts/release1.20.1/</guid>
      <description>Fix release 1.20.1 #   commit: bb70a3fe98b5b722aeeb15eae72a62f74eae20d0  fixes: #  genBundledServiceProto with ordered imports, because it is really disturbing having changes in commits without having changes.
furoBEC #  docker pull thenorstroem/furo-bec:v1.20.1 docker pull thenorstroem/furo-bec:latest
homebrew #  Formula udated (4e5d5d388ce7e5729cb19fa04eb8855e1fdb472cd771c17e4750f444a4bb784e)</description>
    </item>
    
    <item>
      <title>Release1.20</title>
      <link>http://furo.pro/posts/release1.20.0/</link>
      <pubDate>Mon, 16 Nov 2020 13:21:59 +0100</pubDate>
      
      <guid>http://furo.pro/posts/release1.20.0/</guid>
      <description>1.20.0 #  We should have done the release notes before, so this note will contain a summary of the older releases too. In the fututre the messages will get smaller then this one.
semver: 1.20.0 #  date: 2020-11-13T10:12:52+01:00
changes: #    9bf9e23970a3b68d969fa45b5c886a1469edc539
note: &#39;feat: genBundledServiceProto to generate all specified services in one file installed services included&#39; breaking: false description: genBundledServiceProto to generate all specified services in one file installed services included    5f2ec401c3e52df09efbb5c444db5e7a274d80b0</description>
    </item>
    
  </channel>
</rss>
